{"ast":null,"code":"var _jsxFileName = \"/home/nyctophilixic/imdb_clone/frontend/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { getMovies } from '../services/api';\nimport MovieCard from './MovieCard';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const fetchMovies = useCallback(async (search = '', genre = '', actor = '') => {\n    try {\n      const {\n        data\n      } = await getMovies({\n        search,\n        genre,\n        actor,\n        page\n      });\n      setMovies(data.movies.data);\n    } catch (error) {\n      console.error('Fetch error:', error.response || error.message);\n    }\n  }, [page]);\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page - 1),\n      disabled: page === 1,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"sG/fajzj67BF4Wb95RwNNj3V/h8=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useState","useEffect","useCallback","getMovies","MovieCard","SearchBar","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","page","setPage","fetchMovies","search","genre","actor","data","error","console","response","message","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/nyctophilixic/imdb_clone/frontend/src/components/MovieList.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { getMovies } from '../services/api';\nimport MovieCard from './MovieCard';\nimport SearchBar from './SearchBar';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const fetchMovies = useCallback(async (search = '', genre = '', actor = '') => {\n    try {\n      const { data } = await getMovies({ search, genre, actor, page });\n      setMovies(data.movies.data);\n    } catch (error) {\n      console.error('Fetch error:', error.response || error.message);\n    }\n  }, [page]);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  return (\n    <div>\n      <SearchBar onSearch={fetchMovies} />\n      <div className=\"movie-grid\">\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </div>\n      <button onClick={() => setPage(page - 1)} disabled={page === 1}>Previous</button>\n      <button onClick={() => setPage(page + 1)}>Next</button>\n    </div>\n  );\n}\n\nexport default MovieList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMc,WAAW,GAAGZ,WAAW,CAAC,OAAOa,MAAM,GAAG,EAAE,EAAEC,KAAK,GAAG,EAAE,EAAEC,KAAK,GAAG,EAAE,KAAK;IAC7E,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMf,SAAS,CAAC;QAAEY,MAAM;QAAEC,KAAK;QAAEC,KAAK;QAAEL;MAAK,CAAC,CAAC;MAChED,SAAS,CAACO,IAAI,CAACR,MAAM,CAACQ,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,OAAO,CAAC;IAChE;EACF,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEVX,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACF,SAAS;MAACmB,QAAQ,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCrB,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAN,QAAA,EACxBb,MAAM,CAACoB,GAAG,CAAEC,KAAK,iBAChBxB,OAAA,CAACH,SAAS;QAAgB2B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,OAAO,CAACD,IAAI,GAAG,CAAC,CAAE;MAACsB,QAAQ,EAAEtB,IAAI,KAAK,CAAE;MAAAW,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjFrB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,OAAO,CAACD,IAAI,GAAG,CAAC,CAAE;MAAAW,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACnB,EAAA,CA7BQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}