{"ast":null,"code":"var _jsxFileName = \"/home/nyctophilixic/imdb_clone/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/admin/dashboard');\n        setStats(data.stats);\n      } catch (error) {\n        var _error$response, _error$response2;\n        console.error('Error fetching stats:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n          navigate('/login'); // Redirect if unauthorized\n        }\n      }\n    };\n    fetchStats();\n  }, [navigate]);\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Movies: \", stats.movies_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Actors: \", stats.actors_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", stats.genres_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"V3+ObpWhb15jprbS1SvRESkWqQU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","stats","setStats","navigate","fetchStats","data","get","error","_error$response","_error$response2","console","response","message","status","children","fileName","_jsxFileName","lineNumber","columnNumber","movies_count","actors_count","genres_count","_c","$RefreshReg$"],"sources":["/home/nyctophilixic/imdb_clone/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminDashboard() {\n  const [stats, setStats] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const { data } = await api.get('/admin/dashboard');\n        setStats(data.stats);\n      } catch (error) {\n        console.error('Error fetching stats:', error.response?.data || error.message);\n        if (error.response?.status === 403) {\n          navigate('/login'); // Redirect if unauthorized\n        }\n      }\n    };\n    fetchStats();\n  }, [navigate]);\n\n  if (!stats) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h2>Admin Dashboard</h2>\n      <p>Movies: {stats.movies_count}</p>\n      <p>Actors: {stats.actors_count}</p>\n      <p>Genres: {stats.genres_count}</p>\n    </div>\n  );\n}\n\nexport default AdminDashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,kBAAkB,CAAC;QAClDJ,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAAC;MACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,gBAAA;QACdC,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAIE,KAAK,CAACK,OAAO,CAAC;QAC7E,IAAI,EAAAH,gBAAA,GAAAF,KAAK,CAACI,QAAQ,cAAAF,gBAAA,uBAAdA,gBAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;UAClCV,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtB;MACF;IACF,CAAC;IACDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACF,KAAK,EAAE,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAExC,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,KAAK,CAACkB,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,KAAK,CAACmB,YAAY;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,KAAK,CAACoB,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAAClB,EAAA,CA7BQD,cAAc;EAAA,QAEJH,WAAW;AAAA;AAAA0B,EAAA,GAFrBvB,cAAc;AA+BvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}