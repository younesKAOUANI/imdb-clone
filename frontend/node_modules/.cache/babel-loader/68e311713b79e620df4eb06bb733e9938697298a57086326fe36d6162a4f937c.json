{"ast":null,"code":"var _jsxFileName = \"/home/nyctophilixic/imdb_clone/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    try {\n      const {\n        data\n      } = await api.post('/register', {\n        name,\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      navigate('/');\n    } catch (error) {\n      var _error$response;\n      const errorData = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n      console.error('Registration failed:', errorData);\n      setErrors(errorData.errors || {});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.name[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.email[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.password[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"sx7g3R3yJ6m4xECkaLKdrshl/0c=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","api","useNavigate","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","errors","setErrors","navigate","handleRegister","data","post","localStorage","setItem","token","error","_error$response","errorData","response","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","onClick","_c","$RefreshReg$"],"sources":["/home/nyctophilixic/imdb_clone/frontend/src/components/Register.js"],"sourcesContent":["import { useState } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    try {\n      const { data } = await api.post('/register', { name, email, password });\n      localStorage.setItem('token', data.token);\n      navigate('/');\n    } catch (error) {\n      const errorData = error.response?.data || error.message;\n      console.error('Registration failed:', errorData);\n      setErrors(errorData.errors || {});\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Name\"\n      />\n      {errors.name && <p style={{ color: 'red' }}>{errors.name[0]}</p>}\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n      />\n      {errors.email && <p style={{ color: 'red' }}>{errors.email[0]}</p>}\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      {errors.password && <p style={{ color: 'red' }}>{errors.password[0]}</p>}\n      <button onClick={handleRegister}>Register</button>\n    </div>\n  );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}